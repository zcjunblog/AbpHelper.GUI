@using Volo.Abp.MultiTenancy
@using EasyAbp.AbpHelper.Gui.Localization
@using EasyAbp.AbpHelper.Gui.Blazor.Pages.Shared;
@using EasyAbp.AbpHelper.Gui.Services.AbpCli.New.Dtos;
@inherits ExecutableComponentBase
@inject AbpBlazorMessageLocalizerHelper<GuiResource> Lh

<Card class="mb-4">
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h3>@L["AbpCli_New_CreateApp"]</h3>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <Form>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["SolutionName"]</FieldLabel>
                    <TextEdit @bind-Text="Input.SolutionName" Autofocus="true">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["OutputFolder"]</FieldLabel>
                    <TextEdit @bind-Text="Input.OutputFolder">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Field>
                <FieldLabel>@L["AppUiFramework"]</FieldLabel>
                <Select TValue="AppUiFramework" @bind-SelectedValue="Input.Ui">
                    @foreach (var appUiFramework in Enum.GetValues<AppUiFramework>())
                    {
                        <SelectItem Value="appUiFramework">
                            @L[$"AppUiFramework:{Enum.GetName(appUiFramework)}"]
                        </SelectItem>
                    }
                </Select>
            </Field>
            <Field>
                <FieldLabel>@L["AppMobileApplicationFramework"]</FieldLabel>
                <Select TValue="AppMobileApplicationFramework" @bind-SelectedValue="Input.Mobile">
                    @foreach (var mobileApplicationFramework in Enum.GetValues<AppMobileApplicationFramework>())
                    {
                        <SelectItem Value="mobileApplicationFramework">
                            @L[$"AppMobileApplicationFramework:{Enum.GetName(mobileApplicationFramework)}"]
                        </SelectItem>
                    }
                </Select>
            </Field>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["Version"]</FieldLabel>
                    <TextEdit @bind-Text="Input.Version">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["TemplateSource"]</FieldLabel>
                    <TextEdit @bind-Text="Input.TemplateSource">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Field>
                <FieldLabel>@L["AppDatabaseProvider"]</FieldLabel>
                <Select TValue="AppDatabaseProvider" @bind-SelectedValue="Input.DatabaseProvider">
                    @foreach (var databaseProvider in Enum.GetValues<AppDatabaseProvider>())
                    {
                        <SelectItem Value="databaseProvider">
                            @L[$"AppDatabaseProvider:{Enum.GetName(databaseProvider)}"]
                        </SelectItem>
                    }
                </Select>
            </Field>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["ConnectionString"]</FieldLabel>
                    <TextEdit @bind-Text="Input.ConnectionString">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Field>
                <FieldLabel>@L["DatabaseManagementSystem"]</FieldLabel>
                <Select TValue="Database" @bind-SelectedValue="Input.DatabaseManagementSystem">
                    @foreach (var database in Enum.GetValues<Database>())
                    {
                        <SelectItem Value="database">
                            @L[$"Database:{Enum.GetName(database)}"]
                        </SelectItem>
                    }
                </Select>
            </Field>
            <Validation MessageLocalizer="@Lh.Localize">
                <Field>
                    <FieldLabel>@L["LocalFrameworkRef"]</FieldLabel>
                    <TextEdit @bind-Text="Input.LocalFrameworkRef">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
            <Field>
                <Check TValue="bool" @bind-Checked="@Input.SeparateIdentityServer">@L["SeparateIdentityServer"]</Check>
            </Field>
            <Field>
                <Check TValue="bool" @bind-Checked="@Input.Tiered">@L["Tiered"]</Check>
            </Field>
            <Field>
                <Check TValue="bool" @bind-Checked="@Input.Preview">@L["Preview"]</Check>
            </Field>
            <Field>
                <Check TValue="bool" @bind-Checked="@Input.Preview">@L["CreateSolutionFolder"]</Check>
            </Field>
            <Field>
                <Check TValue="bool" @bind-Checked="@Input.NoRandomPort">@L["NoRandomPort"]</Check>
            </Field>
            <SubmitButton Block="true" Clicked="@ExecuteAsync" />
        </Form>
    </CardBody>
</Card>
